@model CategoryModel

@{
    ViewBag.Title = @Resource("Admin.Edit");
}
@Html.Partial("Breadcrumb", new Dictionary<string, string> { { @Resource("Admin.Category"), "/Admin/Category" }, { @Resource("Admin.Edit"), "#" } })

<script src="~/Content/editors/tinymce/tiny_mce.js"></script>

<div class="row-fluid">
    <div class="box span12">
        <div class="box-header well">
            <ul class="nav nav-tabs">
                <li class="active"><a href="#edit">@Resource("Admin.Info")</a></li>
                <li><a href="#seo">@Resource("Admin.Seo")</a></li>
                <li><a href="#Picture">@Resource("Admin.Picture")</a></li>
                <li><a href="#news">@Resource("Admin.ListNews")</a></li>
            </ul>
        </div>
        <div class="box-content">

            @using (Html.BeginForm("Edit", "Language", FormMethod.Post, new { @class = "form-horizontal" }))
            {
                <div class="tab-content">
                    <div class="tab-pane active" id="edit">

                        @Html.AntiForgeryToken()
                        <fieldset>
                            @Html.ValidationSummary(true)
                            @Html.HiddenFor(model => model.Id)

                            <div class="box">
                                <div class="box-header well">
                                    <h2></h2>
                                    <ul class="nav nav-tabs">
                                        <li class="active"><a href="#0">@Resource("Admin.Standard")</a></li>
                                        <li><a href="#1">@Resource("English")</a></li>
                                        <li><a href="#2">@Resource("Japan")</a></li>
                                        <li><a href="#3">@Resource("Korea")</a></li>
                                    </ul>
                                </div>
                                <div class="box-content">
                                    <div class="tab-content">
                                        <div class="tab-pane active" id="0">
                                            <div class="control-group">
                                                @Html.LabelFor(model => model.Name, new { @class = "control-label" })
                                                <div class="controls">
                                                    @Html.EditorFor(model => model.Name, new { @class = "span4 typeahead" })
                                                </div>
                                            </div>
                                            <div class="control-group">
                                                @Html.LabelFor(model => model.Description, new { @class = "control-label" })
                                                <div class="controls">
                                                    @Html.EditorFor(model => model.Description, "RichEditor", new { @row = "20", @style = "width:100%" })
                                                </div>
                                            </div>
                                            <div class="control-group">
                                                @Html.LabelFor(model => model.Published, new { @class = "control-label" })
                                                <div class="controls">
                                                    @Html.EditorFor(model => model.Published, new { @class = "span4 typeahead" })
                                                    @Html.ValidationMessageFor(model => model.Published)
                                                </div>
                                            </div>
                                        </div>
                                        @for (var i = 0; i < Model.Locales.Count(); i++)
                                        {
                                            <div class="tab-pane" id="@Model.Locales[i].LanguageId">
                                                @Html.HiddenFor(model => model.Locales[i].LanguageId)
                                                <div class="control-group">
                                                    @Html.LabelFor(model => model.Locales[i].Name, new { @class = "control-label" })
                                                    <div class="controls">
                                                        @Html.EditorFor(model => model.Locales[i].Name, new { @class = "span4 typeahead" })
                                                    </div>
                                                </div>
                                                <div class="control-group">
                                                    @Html.LabelFor(model => model.Locales[i].Description, new { @class = "control-label" })
                                                    <div class="controls">
                                                        @Html.EditorFor(model => model.Locales[i].Description, "RichEditor", new { @row = "20", @style = "width:100%" })
                                                    </div>
                                                </div>
                                                <div class="control-group">
                                                    @Html.LabelFor(model => model.Locales[i].Published, new { @class = "control-label" })
                                                    <div class="controls">
                                                        @Html.EditorFor(model => model.Locales[i].Published, new { @class = "span4 typeahead" })
                                                        @Html.ValidationMessageFor(model => model.Locales[i].Published)
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>

                            <div class="control-group">
                                @Html.LabelFor(model => model.ParentCategoryId, new { @class = "control-label" })
                                <div class="controls">
                                    @Html.DropDownListFor(model => model.ParentCategoryId, new SelectList(Model.AvailableCategoryTemplates, "Value", "Text"), new { @data_rel = "chosen" })
                                    @Html.ValidationMessageFor(model => model.ParentCategoryId)
                                </div>
                            </div>

                            <div class="control-group">
                                @Html.LabelFor(model => model.PictureId, new { @class = "control-label" })
                                <div class="controls">
                                    @Html.EditorFor(model => model.PictureId, new { @class = "span4 typeahead" })
                                    @Html.ValidationMessageFor(model => model.PictureId)
                                </div>
                            </div>

                            <div class="control-group">
                                @Html.LabelFor(model => model.ShowOnHomePage, new { @class = "control-label" })
                                <div class="controls">
                                    @Html.EditorFor(model => model.ShowOnHomePage, new { @class = "span4 typeahead" })
                                    @Html.ValidationMessageFor(model => model.ShowOnHomePage)
                                </div>
                            </div>

                            <div class="control-group">
                                @Html.LabelFor(model => model.IncludeInTopMenu, new { @class = "control-label" })
                                <div class="controls">
                                    @Html.EditorFor(model => model.IncludeInTopMenu, new { @class = "span4 typeahead" })
                                    @Html.ValidationMessageFor(model => model.IncludeInTopMenu)
                                </div>
                            </div>

                            <div class="control-group">
                                @Html.LabelFor(model => model.DisplayOrder, new { @class = "control-label" })
                                <div class="controls">
                                    @Html.EditorFor(model => model.DisplayOrder, new { @class = "span4 typeahead" })
                                    @Html.ValidationMessageFor(model => model.DisplayOrder)
                                </div>
                            </div>

                            <div class="control-group">
                                @Html.LabelFor(model => model.CategoryType, new { @class = "control-label" })
                                <div class="controls">
                                    @Html.EditorFor(model => model.CategoryType, new { @class = "span4 typeahead" })
                                    @Html.ValidationMessageFor(model => model.CategoryType)
                                </div>
                            </div>

                            <div class="control-group">
                                @Html.LabelFor(model => model.CreatedDate, new { @class = "control-label" })
                                <div class="controls">
                                    @Html.EditorFor(model => model.CreatedDate, new { @class = "span4 typeahead" })
                                    @Html.ValidationMessageFor(model => model.CreatedDate)
                                </div>
                            </div>

                            <div class="control-group">
                                @Html.LabelFor(model => model.UpdatedDate, new { @class = "control-label" })
                                <div class="controls">
                                    @Html.EditorFor(model => model.UpdatedDate, new { @class = "span4 typeahead" })
                                    @Html.ValidationMessageFor(model => model.UpdatedDate)
                                </div>
                            </div>

                            <div class="form-actions">
                                <button id="btnSave" type="submit" class="btn btn-primary">@Resource("Save")</button>
                                <a class="btn btn-cancel" href="@Url.Action("", "Category", new { area = "Admin" },null)">@Resource("Admin.Exit")</a>
                            </div>
                        </fieldset>
                    </div>
                    <div class="tab-pane" id="seo">
                        <div class="box">
                            <div class="box-header well">
                                <h2></h2>
                                <ul class="nav nav-tabs">
                                    <li class="active"><a href="#seo_0" class="active">@Resource("Admin.Standard")</a></li>
                                    <li><a href="#seo_1">@Resource("English")</a></li>
                                    <li><a href="#seo_2">@Resource("Japan")</a></li>
                                    <li><a href="#seo_3">@Resource("Korea")</a></li>
                                </ul>
                            </div>
                            <div class="box-content">
                                <div class="tab-content">
                                    <div class="tab-pane active" id="seo_0">
                                        <div class="control-group">
                                            @Html.LabelFor(model => model.MetaTitle, new { @class = "control-label" })
                                            <div class="controls">
                                                @Html.EditorFor(model => model.MetaTitle, new { @class = "span4 typeahead" })
                                            </div>
                                        </div>
                                        <div class="control-group">
                                            @Html.LabelFor(model => model.MetaDescription, new { @class = "control-label" })
                                            <div class="controls">
                                                @Html.TextAreaFor(model => model.MetaDescription, new { @class = "span4 typeahead" })
                                            </div>
                                        </div>
                                        <div class="control-group">
                                            @Html.LabelFor(model => model.MetaKeywords, new { @class = "control-label" })
                                            <div class="controls">
                                                @Html.EditorFor(model => model.MetaKeywords, new { @class = "span4 typeahead" })
                                            </div>
                                        </div>
                                    </div>
                                    @for (var i = 0; i < Model.Locales.Count(); i++)
                                    {

                                        <div class="tab-pane" id="seo_@Model.Locales[i].LanguageId">
                                            <div class="control-group">
                                                @Html.LabelFor(model => model.Locales[i].MetaTitle, new { @class = "control-label" })
                                                <div class="controls">
                                                    @Html.EditorFor(model => model.Locales[i].MetaTitle, new { @class = "span4 typeahead" })
                                                </div>
                                            </div>
                                            <div class="control-group">
                                                @Html.LabelFor(model => model.Locales[i].MetaDescription, new { @class = "control-label" })
                                                <div class="controls">
                                                    @Html.TextAreaFor(model => model.Locales[i].MetaDescription, new { @class = "span4 typeahead" })
                                                </div>
                                            </div>
                                            <div class="control-group">
                                                @Html.LabelFor(model => model.Locales[i].MetaKeywords, new { @class = "control-label" })
                                                <div class="controls">
                                                    @Html.EditorFor(model => model.Locales[i].MetaKeywords, new { @class = "span4 typeahead" })
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="tab-pane" id="news">
                        @if (Model.Id == 0)
                        {
                            <p>You need to save the Category before you can add news for this news page.</p>
                        }
                        else
                        {
                            <div> @Html.Partial("_PartialProductMapping", Model.CategoryProductModel)</div>
                        }
                    </div>
                    <div class="tab-pane" id="Picture">
                        @if (Model.Id == 0)
                        {
                            <p>You need to save the Category before you can upload pictures for this news page.</p>
                        }
                        else
                        {
                            <div id="tb_pic">
                                @Html.Partial("_PartialAllPicture", Model.Category_Picture)
                            </div>
                            <div class="control-group">
                                <label class="control-label" for="Picture">@Resource("Admin.Picture")</label>
                                <div class="controls">
                                    <img class="imgsNews" src="" style="width:100px" />
                                    <input id="fileInput" name="fileInput" type="file">
                                    <input class="UrlPath" name="UrlPath" type="hidden">
                                </div>
                            </div>
                            <div class="control-group">
                                <label class="control-label" for="Display order:">@Resource("Admin.DisplayOrder")</label>
                                <div class="controls">
                                    <input id="picOrder" name="DisplayOrder" type="number" value="1">
                                </div>
                            </div>
                            <div class="form-actions">
                                <button id="addPicture" type="button" class="btn btn-primary">@Resource("Admin.AddNewsPicture")</button>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<style>
    #content .nav-tabs > li > a {
        line-height: 15px !important;
    }

    .chzn-container .chzn-results .active-result {
        color: black;
        text-shadow: none;
    }
</style>

@section ScriptCustom {
    <script src="~/Content/js/jquery.uploadify-3.1.min.js"></script>
    <script src="~/Content/js/bootstrap-tab.js"></script>
    <!-- select or dropdown enhancer -->
    <script src="~/Content/js/jquery.chosen.min.js"></script>
    <script>

        function UpdatePicture(){
            $.post( "@Url.Action("AllPicture", "Category", new { @Id = Model.Id })", function( data ) {
                $( "#tb_pic" ).html(data);
            });
        }

        $(document).ready(function () {
            $('#content .nav-tabs a:first').tab('show');
            $('#content .nav-tabs a').click(function (e) {
                e.preventDefault();
                $(this).tab('show');
            });
            //chosen - improves select
            $('[data-rel="chosen"],[rel="chosen"]').chosen();

            $('#btnSave').click(function (event) {
                showPopUpStatus('@Resource("Admin.UpdateData")');
                tinyMCE.triggerSave();
                event.preventDefault();
                $.post('@Url.Action("Edit", "Category")', $('form').serialize(), function (data) {
                    if (data.success) {
                        popUp(false, '@Resource("Admin.UpdateSuccess")', true, document.referrer);
                    } else {
                        popUp(true, data.message, false);
                    }
                });
            });

            $('#addPicture').click(function (event) {
                event.preventDefault();
                $.post(
                    '@Url.Action("AddPicture", "Category")',
                    {
                        Id: @Model.Id ,
                        DisplayOrder: $("#picOrder").val(),
                        UrlPath: $('.UrlPath').val()
                    },
                    function (data) {
                        if (data.success) {
                            UpdatePicture();
                        }
                    });
                return false;
            });

            $('#fileInput').uploadify({
                'swf': '@Url.Content("~/content/js/flash/uploadify.swf")',
                'uploader': "@Url.Action("UploadFiles", "Upload",new { area="" },null)",
                'multi': false,
                'fileExt': '*.jpg;*.jpeg;*.gif;*.png',
                'formData':
            {
                'type': 1
            },
                'onUploadSuccess': function (file, data, response) {
                    $(".imgsNews").attr('src', data);
                    $(".UrlPath").val(data);
                }
            });
        });
    </script>
}











